{"version":3,"sources":["components/PopupWindow.js","components/ContactsList.js","App.js","index.js"],"names":["PopupWindow","props","handleChange","event","setState","target","name","value","onFormSubmit","preventDefault","text","state","first_name","last_name","handleSubmit","handleUpdate","initialState","imageUpload","e","reader","FileReader","file","files","onloadend","imagePreviewUrl","result","readAsDataURL","phone","email","contact_toEdit","this","imageFileBase64","className","id","onClick","closePopup","onSubmit","type","class","src","onChange","placeholder","React","Component","ContactsList","rows","contactsData","map","row","index","editContact","removeContact","App","showPopup_Add","showPopup_Edit","edit_index","contacts","sendToLocal","newContacts","localStorage","setItem","JSON","stringify","contact","concat","handleEdit","togglePopupEdit","filter","i","updateContact","arr","getItem","parse","href","togglePopupAdd","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c962757c.chunk.js","sourcesContent":["import React from 'react';\n\nclass PopupWindow extends React.ComponentÂ {\n  constructor(props) {\n      super(props);\n\n      this.initialState = {\n          first_name: '',\n          last_name: '',\n          phone: '',\n          email: '',\n          imagePreviewUrl: '',\n      };\n\n      if(this.props.text === 'Editing')\n      {\n        this.state = this.props.contact_toEdit;\n      }\n      else {\n        this.state = this.initialState;\n      }\n  }\n\n  handleChange = event => {\n\n    this.setState({\n        [event.target.name] : event.target.value\n    });\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    if(this.props.text === 'Adding') {\n      if(this.state.first_name !== '' || this.state.last_name !== '')\n      {\n        this.props.handleSubmit(this.state);\n      }\n    }\n    else {\n      this.props.handleUpdate(this.state);\n    }\n\n    this.setState(this.initialState);\n  }\n\n  imageUpload = (e) => {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        imagePreviewUrl: reader.result\n      });\n    }\n    reader.readAsDataURL(file)\n  }\n\n  render() {\n    const { first_name, last_name, phone, email, imagePreviewUrl, imageFileBase64} = this.state;\n\n    return (\n      <div className='popupWindow'>\n        <div className='contactForm'>\n          <div className='content'>\n            <button  id='cancel' onClick={this.props.closePopup}>Cancel</button>\n            <form onSubmit={this.onFormSubmit}>\n                <button id='save' type=\"submit\">\n                  Save\n                </button>\n\n                <div class=\"photo_name_row\">\n                  <div class=\"photo\">\n                    {imagePreviewUrl==='' ?\n                      <div class=\"circle\"><span class=\"addphoto\">Add Photo</span></div>\n                      :\n                      <img class=\"image\" src={imagePreviewUrl}/>\n                    }\n                    <input type=\"file\" id=\"file-input\" onChange={this.imageUpload}/>\n                  </div>\n                  <div class='name'>\n                    <input\n                        type=\"text\"\n                        name=\"first_name\"\n                        placeholder=\"First Name\"\n                        value={first_name}\n                        onChange={this.handleChange}\n                    />\n                    <hr />\n                    <input\n                        type=\"text\"\n                        name=\"last_name\"\n                        placeholder=\"Last Name\"\n                        value={last_name}\n                        onChange={this.handleChange}\n                    />\n                    <hr />\n                  </div>\n                </div>\n                <div class='phone_email'>\n                  <label>phone:</label>\n                  <input\n                      type=\"text\"\n                      name=\"phone\"\n                      placeholder=\"+1 917 000 00 00\"\n                      value={phone}\n                      onChange={this.handleChange}\n                  />\n                  <hr />\n                  <label>email:</label>\n                  <input\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"example@gmail.com\"\n                      value={email}\n                      onChange={this.handleChange}\n                  />\n                  <hr />\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PopupWindow\n","import React from 'react';\n\n\nclass ContactsList extends React.Component {\n\n    render() {\n        const rows = this.props.contactsData.map((row, index) => {\n\n            return (\n              <div class=\"contact\">\n                  <div class=\"photo_col\">\n                    {row.imagePreviewUrl==='' ?\n                      <div class=\"photoCircle\">\n                        <span class=\"photoFL\">{row.first_name[0] + row.last_name[0]}</span>\n                      </div>\n                      :\n                      <img class=\"photoImage\" src={row.imagePreviewUrl}/>\n                    }\n                  </div>\n\n                  <div class=\"info_col\">\n                    <p id=\"contactName\">{row.first_name + ' ' + row.last_name}</p>\n                    <p id=\"contactEmail\">{row.email}</p>\n                  </div>\n\n                  <div class=\"button_col\">\n                    <i id=\"edit\" class=\"fa fa-edit\" onClick={() => this.props.editContact(index)}></i>\n                    <a class=\"delete\" onClick={() => this.props.removeContact(index)}/>\n                  </div>\n              </div>\n\n            );\n        });\n\n        return (\n          <div className=\"contacts_list\">{rows}</div>\n        );\n    };\n}\n\nexport default ContactsList\n","import React from 'react';\nimport PopupWindow from './components/PopupWindow'\nimport ContactsList from './components/ContactsList'\nimport './App.css';\n\nexport default class App extends React.Component {\n\n  state = {\n    showPopup_Add: false,\n    showPopup_Edit: false,\n    edit_index: 0,\n    contacts: [\n      {\n          first_name: 'Mike',\n          last_name: 'Lee',\n          phone: '0000000',\n          email: 'example@gmail.com',\n          imagePreviewUrl: '',\n          // imageFileBase64: ''\n      },\n      {\n          first_name: 'Tom',\n          last_name: 'Wang',\n          phone: '0000000',\n          email: 'example@gmail.com',\n          imagePreviewUrl: '',\n          // imageFileBase64: ''\n      }\n    ]\n  };\n\n  constructor() {\n    super();\n\n\n    if (localStorage.getItem('myContacts')) {\n      this.state.contacts = JSON.parse(localStorage.getItem('myContacts'));\n    }\n    else\n    {\n      this.sendToLocal(this.state.contacts);\n    }\n  }\n\n  sendToLocal = (newContacts) => (localStorage.setItem('myContacts', JSON.stringify(newContacts)))\n\n  togglePopupAdd() {\n    this.setState({\n      showPopup_Add: !this.state.showPopup_Add\n    });\n  }\n\n  togglePopupEdit() {\n    this.setState({\n      showPopup_Edit: !this.state.showPopup_Edit\n    });\n  }\n\n\n\n  handleSubmit = contact => {\n    const newContacts = this.state.contacts.concat(contact);\n    this.setState({\n      contacts: newContacts\n    });\n\n    this.sendToLocal(newContacts)\n  }\n\n  handleEdit = index => {\n    this.setState({\n      edit_index: index\n    });\n\n    this.togglePopupEdit();\n\n\n  }\n\n  removeContact = index => {\n    const newContacts = this.state.contacts.filter((contact, i) => {\n        return i !== index;\n    });\n\n    this.setState({\n      contacts: newContacts\n    });\n    this.sendToLocal(newContacts);\n  }\n\n  updateContact = contact => {\n    var arr = this.state.contacts;\n    arr[this.state.edit_index] = contact;\n    this.setState({ contacts: arr});\n    this.sendToLocal(arr);\n  }\n\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='title_row'>\n          <h1 className='title'>My Contacts</h1>\n          <a href=\"#\" className=\"open\" onClick={this.togglePopupAdd.bind(this)}/>\n          <hr className='divider'/>\n        </div>\n        {this.state.showPopup_Add ?\n          <PopupWindow\n            text='Adding'\n            handleSubmit={this.handleSubmit}\n            closePopup={this.togglePopupAdd.bind(this)}\n          />\n          : null\n        }\n        {this.state.showPopup_Edit ?\n          <PopupWindow\n            text='Editing'\n            contact_toEdit={this.state.contacts[this.state.edit_index]}\n            handleSubmit={this.handleSubmit.bind(this)}\n            handleUpdate={this.updateContact.bind(this)}\n            closePopup={this.togglePopupEdit.bind(this)}\n          />\n          : null\n        }\n        <ContactsList\n          contactsData={this.state.contacts}\n          editContact={this.handleEdit.bind(this)}\n          removeContact={this.removeContact.bind(this)}\n        />\n      </div>\n    );\n  }\n\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}